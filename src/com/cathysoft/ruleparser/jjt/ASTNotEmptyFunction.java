/* Generated By:JJTree: Do not edit this line. ASTNotEmptyFunction.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.cathysoft.ruleparser.jjt;

import java.util.LinkedList;
import java.util.List;

public class ASTNotEmptyFunction extends SimpleNode {
	
	private List<ASTPath> paths = new LinkedList<ASTPath>();
	
	public ASTNotEmptyFunction(int id) {
		super(id);
	}

	public ASTNotEmptyFunction(Parser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. **/
	public Object jjtAccept(ParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}
	
	public List<ASTPath> getPaths() {
		return paths;
	}

	public void setPaths(List<ASTPath> paths) {
		this.paths = paths;
	}
	
	public void addPath(ASTPath path) {
		this.paths.add(path);
	}
}
/*
 * JavaCC - OriginalChecksum=51aa24b972cd20d9d2c146d7fb9d569e (do not edit this
 * line)
 */
